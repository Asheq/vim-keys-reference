!		filter Nmove text through the {filter} command
"		 use register {a-zA-Z0-9.%#:-"} for next delete, yank or put (uppercase to append) ({.%#:} only work with put)
#		search backward for the Nth occurrence of the ident under the cursor
$		cursor to the end of Nth next line
%		find the next (curly/square) bracket on this line and go to its match, or go to matching comment bracket, or go to matching		preprocessor directive.
&		repeat last :s
(		cursor N sentences backward
)		cursor N sentences forward
*		search forward for the Nth occurrence of the ident under the cursor
+		same as <CR>
:		start entering an Ex command
<		shift Nmove lines one 'shiftwidth' leftwards
>		shift Nmove lines one 'shiftwidth' rightwards
?		search backward for the Nth previous occurrence of {pattern}
@		execute the contents of register {a-z} N times
^		cursor to the first CHAR of the line
_		cursor to the first CHAR N - 1 lines lower
}		cursor N paragraphs forward
~		'tildeop' off: switch case of N characters under cursor and move the cursor N characters to the right

''		cursor to the first CHAR of the line where the cursor was before the latest jump.
'(		cursor to the first CHAR on the line of the start of the current sentence
')		cursor to the first CHAR on the line of the end of the current sentence
'<		cursor to the first CHAR of the line where highlighted area starts/started in the current buffer.
'>		cursor to the first CHAR of the line where highlighted area ends/ended in the current buffer.
'[		cursor to the first CHAR on the line of the start of last operated text or start of put text
']		cursor to the first CHAR on the line of the end of last operated text or end of put text
'{		cursor to the first CHAR on the line of the start of the current paragraph
'}		cursor to the first CHAR on the line of the end of the current paragraph

@:		repeat the previous ':' command N times
@@		repeat the previous @{a-z} N times

`(		cursor to the start of the current sentence
`)		cursor to the end of the current sentence
`<		cursor to the start of the highlighted area
`>		cursor to the end of the highlighted area
`[		cursor to the start of last operated text or start of putted text
`]		cursor to the end of last operated text or end of putted text
``		cursor to the position before latest jump
`{		cursor to the start of the current paragraph
`}		cursor to the end of the current paragraph
